<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[kolla部署openstack集群]]></title>
    <url>%2F2018%2F11%2F30%2Fkolla_openstack_deploy%2F</url>
    <content type="text"><![CDATA[All-in-One部署系统要求：2张网卡8G内存40G磁盘 系统环境准备： 关闭防火墙：ufw disable 增加DNS解析：vim /etc/resolve.conf nameserver 114.114.114.114 设置hostname：vim /etc/hostname kollaVim /etc/hosts 127.0.0.1 kolla 更新apt源Vim /etc/apt/source.listdeb https://apt.dockerproject.org/repo ubuntu-xenial maindeb-src http://archive.Ubuntu.com/ubuntu xenial main restricteddeb http://mirrors.aliyun.com/ubuntu/ xenial main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universedeb http://mirrors.aliyun.com/ubuntu/ xenial universedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates universedeb http://mirrors.aliyun.com/ubuntu/ xenial multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiversedeb http://archive.canonical.com/ubuntu xenial partnerdeb-src http://archive.canonical.com/ubuntu xenial partnerdeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universedeb http://mirrors.aliyun.com/ubuntu/ xenial-security universedeb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse 同步时间：apt-get install ntpApt-get install ntpdateSystemctl stop ntpdNtpdata cn.ntp.org.cn 修改网卡配置文件Vim /etc/network 开始安装： 安装pipapt-get install python-pippip install –U pip 安装基础依赖包apt-get install python-dev libffi-dev gcc libssl-dev git 安装docker 要求&gt;1.12a. apt-get updateb. apt-get install apt-transport-https ca-certificatesc. apt-key adv –keyserver hkp://p80.pool.sks-keyservers.net:80 –recv-keys 58118E89F3A912897C070ADBF76221572C52609Dd. cp /etc/apt/source.list /etc/apt/source.list.bake. 增加下列apt源vim /etc/apt/source.listdeb http://osm.neunn.com/docker ubuntu-trusty mainf. 更新：apt-get updateg. 清理过时源：apt-get purge lxc-dockerh. 验证从新库下载lib：apt-cache policy docker-enginei. apt-get install linux-image-extra-$(uname -r)j. apt-get install docker-engine到此就安装成功了，验证一下：systemctl start dockerdocker run hello-worlddocker ps 安装ansible kollapip install ansiblepip install kolla 设置dockermkdir /etc/systemd/system/docker.service.dvim / etc/systemd/system/docker.service.d/kolla.conf[Service]MountFlags=True重启服务：systemctl daemon-reloadsystemctl restart dockersystemctl enable docker设置访问私有仓库：vim /lib/systemd/system/docker.serviceExecStart=/usr/bin/dockerd –insecure-registry x.x.x.x:4000重启服务：systemctl daemon-reloadsystemctl restart docker 注册registrydocker run -d -v /opt/registry:/var/lib/registry -p 4000:5000 \–restart=always –name registry registry:2 下载kolla官方镜像wget http://tarballs.openstack.org/kolla/images/ubuntu-source- registry-ocata.tar.gztar zxvf ubuntu-source-registry-ocata.tar.gz -C /opt/registry/也可从本地拷贝（我会提供一个本地地址）这样就把Kolla的docker镜像文件放到本地的Registry服务器上 下载kolla-ansible代码cd /homegit clone http://git.trystack.cn/openstack/kolla-ansiblecd kola-ansiblegit checkout remotes/origin/stable/ocata(也可从本地拷贝) 安装kolla-ansiblepip install .拷贝配置文件： cp –r etc/kolla /etc/kollacp ansible/inventory/* /home/ 生成密码文件kolla-genpwd修改admin密码：vim /etc/kolla/passwords.yamlKeystone_admin_password:admin123之后登陆dashboard也是这个密码 修改global文件，部署openstackvim /etc/kolla/globals.ymlkolla_base_distro: “ubuntu”kolla_install_type: “source”kolla_internal_vip_address:”x.x.x.x”（VIP）network_interface: “ens0f0” (物理网卡)neutron_external_interface: “ens0f1” （物理网卡） 开始部署Kolla-ansible precheckKolla-ansible deploy –i /home/all-in-one 部署完成后，生成环境变量Kolla-ansible post-deploySource /etc/kolla/admin-openrc.sh 安装openstack clientpip install python-openstackclient Cd /usr/share/kolla-ansible/./ init-runonce 至此，部署完毕登陆dashboard （vip admin/admin123） Multimode部署1-11步按照上面步骤执行 修改global.yaml文件在其中一台上部署register即可，其他节点连接该Registry 修改mutinode[control]controller01controller02[network]controller01controller02[compute]controller01controller02[monitoring]controller02[storage]controller01controller02 ceph部署配置及操作a. 格式化controller01 controller02的数据盘fdisk /dev/sdbmd1D2wrebootb. 给磁盘创建tagparted /dev/sdb –s – mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 215GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags:Number Start End Size File system Name Flags1 1049kB 215GB 215GB KOLLA_CEPH_OSD_BOOTSTRAPc. 创建ceph配置文件vim /etc/kolla/config/ceph.conf[global]osd pool default size = 2 （根据磁盘数修改）osd pool default min size = 2（根据磁盘数修改）d. 修改global，使能cephvim /etc/kolla/globals.ymlenable_cinder: “yes”enable_ceph: “yes”enable_ceph_rgw: “yes”enable_ceph_rgw_keystone: “yes”glance_backend_ceph: “yes”e. 部署前检查kolla-ansible prechecks –i /home/multimode出现下列信息即表示检查通过PLAY RECAP *controller01: ok=134 changed=0 unreachable=0 failed=0controller02: ok=133 changed=0 unreachable=0 failed=0f. 开始部署kolla-ansible deploy –i /home/multimode]]></content>
      <categories>
        <category>openstack</category>
        <category>kolla</category>
      </categories>
      <tags>
        <tag>部署</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[openstack集群热升级方案]]></title>
    <url>%2F2018%2F11%2F29%2Fopenstack_region_upgrade%2F</url>
    <content type="text"><![CDATA[注：本升级方案仅适用于Docker部署的openstack环境 方案背景 由于openstack迭代很快，每个版本会修复很多Bug，引入很多特性，有一些问题修复和特性引入是我们所需要的功能，想增加到环境中；我们本身也修复了一些问题，增加了一些特性，想升级到生产环境中去。 通过环境热升级，我们可以将特性或者修复的Bug合入到我们的版本中去，且不影响当前环境使用。 所以版本热升级则不可避免。 方案概述 我们采用容器镜像替换的方式升级云环境。 首先制作新镜像，将新代码打包到新镜像中 ada次sadsd在各节点上更新镜像，使用kolla upgrade命令，升级配置，升级数据库，使用新镜像重启容器，完成组件升级。 最大限度保证业务不中断，升级失败可快速回退至原镜像。 升级目标 热升级，业务无影响 升级失败可回退，业务无影响 前期准备 制作新版本镜像 将新特性，或者修复的bug更新到公司代码库，使用kolla项目制作各组件镜像：kolla-build --config-file /home/zongk/kolla/etc/kolla/kolla-build.conf -t source -b ubuntu neutron 备份配置文件 ***** 将各节点配置文件保存，很重要，如果升级失败，需要回退版本时，可直接使用。 备份数据库 ***** 将数据库备份，很重要，如果升级失败，需要回退版本时，可直接使用。（最新版本自动化部署已经将数据库备份集成，每天凌晨2点会自动全量备份数据库，如果认为该备份已是最新数据库备份，可不备份数据库，但建议每次升级都重新备份下数据库） 升级步骤 下载镜像 将新版本镜像下载至个节点上，例如：升级Nova组件，在各节点上拉取Nova组件最新镜像： $ git pull images.neunn.com/ncloud/nova-xxx:3.0.0 更新配置 在新特性或者bug需要修改的配置 执行升级 在部署节点上执行: $ kolla-ansible upgrade -i /kolla-ansible/deploy-ui/conf/multinodes –t nova 升级验证 查看各节点nova服务log，看是否运行正常 创建虚机测试 （后续增加tempest服务后，可用tempest测试） 注：P版本之后的kolla-ansible，可以通过增–host 参数支持单节点升级扩容节点（已增加到新版部署平台） 扩容不支持扩容控制节点，只支持扩容计算存储网络节点 命令行扩容 修改配置文件 在部署虚机中修改节点配置文件，增加待扩容节点信息/kolla-ansible/deploy-ui/AutoDeploy/scripts/conf/multimode 例如要扩容计算节点，在compute下增加信息： [compute] B-OPS-9-2 network_interface=eth0 api_interface=eth0 storage_interface=eth4 tunnel_interface=eth1 执行扩容 $ kolla-ansible deploy -i /kolla-ansible-queens/multinodes]]></content>
      <categories>
        <category>openstack</category>
        <category>kolla</category>
      </categories>
      <tags>
        <tag>升级</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DIB安装使用指南]]></title>
    <url>%2F2018%2F10%2F08%2Fopenstack_dib_install%2F</url>
    <content type="text"><![CDATA[简介： diskimage-builder是openstack社区用于制作镜像的一个工具. 它的源码地址位于: https://github.com/openstack/diskimage-builder 官方的文档位于: http://docs.openstack.org/developer/diskimage-builder/ 安装： 1.1 pip安装 $ pip install diskimage-builder 1.2 源码安装 $ git clone https://github.com/openstack/diskimage-builder.git -b 2.9.0 $ cd diskimage-builder &amp;&amp; python set.py install $ apt-get install qemu kpartx $ pip install networkx==1.11（只支持1.11版本） 使用： 制作ubuntu镜像，镜像中安装qemu-guest-agent服务$ disk-image-create -o ubuntu-trusty -t raw -p qemu-guest-agent ubuntu vm devuser cloud-init-datasources 制作octavia服务镜像$ git clone http://10.20.0.196/kernel/octavia.git -b ocata$ cd /root/octavia/octavia/diskimage-create &amp;&amp; ./diskimage-create.sh -x -s 2 -d trusty -o /root/octavia/amphora.img]]></content>
      <categories>
        <category>openstack</category>
        <category>DIB</category>
      </categories>
      <tags>
        <tag>install</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用DIB制作openstack镜像，报错'blockdev']]></title>
    <url>%2F2018%2F10%2F08%2Fopenstack_dib_error%2F</url>
    <content type="text"><![CDATA[问题现象：使用DIB制作openstack镜像，报错：KeyError: ‘blockdev’ 具体错误信息如下： 2018-10-08 06:38:45.370 | Traceback (most recent call last): 2018-10-08 06:38:45.370 | File &quot;/usr/local/bin/dib-block-device&quot;, line 10, in &lt;module&gt; 2018-10-08 06:38:45.370 | sys.exit(main()) 2018-10-08 06:38:45.370 | File &quot;/usr/local/lib/python2.7/dist-packages/diskimage_builder/block_device/cmd.py&quot;, line 120, in main 2018-10-08 06:38:45.370 | return bdc.main() 2018-10-08 06:38:45.370 | File &quot;/usr/local/lib/python2.7/dist-packages/diskimage_builder/block_device/cmd.py&quot;, line 115, in main 2018-10-08 06:38:45.370 | self.args.func() 2018-10-08 06:38:45.370 | File &quot;/usr/local/lib/python2.7/dist-packages/diskimage_builder/block_device/cmd.py&quot;, line 33, in cmd_getval 2018-10-08 06:38:45.371 | self.bd.cmd_getval(self.args.symbol) 2018-10-08 06:38:45.371 | File &quot;/usr/local/lib/python2.7/dist-packages/diskimage_builder/block_device/blockdevice.py&quot;, line 317, in cmd_getval 2018-10-08 06:38:45.371 | print(&quot;%s&quot; % state[&apos;blockdev&apos;][&apos;image0&apos;][&apos;device&apos;]) 2018-10-08 06:38:45.371 | File &quot;/usr/local/lib/python2.7/dist-packages/diskimage_builder/block_device/blockdevice.py&quot;, line 85, in __getitem__ 2018-10-08 06:38:45.371 | return self.state[key] 2018-10-08 06:38:45.371 | KeyError: &apos;blockdev&apos; 2018-10-08 06:38:46.629 | *** /tmp/dib_build.tvBGMDYf/mnt is not a directory 问题原因：由于networkx版本和DIB源码版本对应不上导致，DIB最新代码支持networkx 3.x版本，但是由于代码问题，回退到了支持2.x版本，但是很多情况下还是有问题解决办法：将networkx降级，降到1.11版本，测试通过 $ pip install -U networkx=1.11]]></content>
      <categories>
        <category>openstack</category>
        <category>DIB</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[openstack虚机搭建VPN Server：ERROR Code 806]]></title>
    <url>%2F2018%2F09%2F29%2Fopenstack_vm_VPN%2F</url>
    <content type="text"><![CDATA[问题描述： openstack环境搭建VPN server，访问报806错误现象：openstack环境创建Windows server，其中搭建VPN server，访问报806错误 查看安全组，规则全部允许通过 问题原因：iptable没有加载gre和pptp模块解决方法：$ modprobe nf_conntrack_proto_gre $ modprobe ip_nat_pptp $ modprobe ip_conntrack_pptp]]></content>
      <categories>
        <category>openstack</category>
        <category>VPN</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kolla扩容openstack节点]]></title>
    <url>%2F2018%2F09%2F26%2Fkolla_openstack_expand%2F</url>
    <content type="text"><![CDATA[使用kolla-ansible扩容openstack节点步骤：（以下均在部署容器中执行） 修改/etc/hosts，增加新主机 修改/etc/ansible/hosts，增加新主机（其他不要动） 修改/kolla-ansible/deploy-ui/AutoDeploy/scripts/conf/multinode，增加新主机（其他不要动） 执行命令扩容ceph：ansible-playbook /ceph-ansible/site.yml 修改/usr/local/share/kolla-ansible/ansible/site.yml ：一定要注释ncloud部署代码 命令扩容openstack：kolla-ansible deploy -i /kolla-ansible/deploy-ui/AutoDeploy/scripts/conf/multinode]]></content>
      <categories>
        <category>openstack</category>
        <category>kolla</category>
      </categories>
      <tags>
        <tag>部署</tag>
        <tag>扩容</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kolla制作openstack镜像问题]]></title>
    <url>%2F2018%2F09%2F26%2Fkolla_image_error%2F</url>
    <content type="text"><![CDATA[问题现象： 当使用kolla命令制作openstack镜像时，报&apos;dict object&apos; has no attribute &apos;heka&apos;错误 具体错误信息如下： INFO:kolla.common.utils:Image squash is disabled INFO:kolla.common.utils:Found the docker image folder at /usr/local/share/kolla/docker Traceback (most recent call last): File &quot;/usr/local/bin/kolla-build&quot;, line 10, in &lt;module&gt; sys.exit(main()) File &quot;/usr/local/lib/python2.7/dist-packages/kolla/cmd/build.py&quot;, line 30, in main statuses = build.run_build() File &quot;/usr/local/lib/python2.7/dist-packages/kolla/image/build.py&quot;, line 1260, in run_build kolla.create_dockerfiles() File &quot;/usr/local/lib/python2.7/dist-packages/kolla/image/build.py&quot;, line 899, in create_dockerfiles content = template.render(values, env=os.environ) File &quot;/usr/local/lib/python2.7/dist-packages/jinja2/environment.py&quot;, line 1008, in render return self.environment.handle_exception(exc_info, True) File &quot;/usr/local/lib/python2.7/dist-packages/jinja2/environment.py&quot;, line 780, in handle_exception reraise(exc_type, exc_value, tb) File &quot;/tmp/kolla-2018-07-11_05-18-23_39cbVG/docker/heka/Dockerfile.j2&quot;, line 8, in top-level template code File &quot;/usr/local/lib/python2.7/dist-packages/jinja2/runtime.py&quot;, line 553, in _invoke rv = self._func(*arguments) File &quot;/tmp/kolla-2018-07-11_05-18-23_39cbVG/docker/macros.j2&quot;, line 47, in template File &quot;/usr/local/lib/python2.7/dist-packages/jinja2/environment.py&quot;, line 430, in getattr return getattr(obj, attribute) jinja2.exceptions.UndefinedError: &apos;dict object&apos; has no attribute &apos;heka&apos; 问题原因： kolla版本较低，不支持heka目录，pip list | grep kolla 解决办法： http://eavesdrop.openstack.org/irclogs/%23openstack-kolla/%23openstack-kolla.2017-09-30.log.html $ cd /usr/local/share/kolla/docker $ rm -rf heka]]></content>
      <categories>
        <category>openstack</category>
        <category>kolla</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pip安装失败：AttributeError: 'module' object has no attribute 'SSL_ST_INIT']]></title>
    <url>%2F2018%2F09%2F26%2Fpip_install_errors%2F</url>
    <content type="text"><![CDATA[问题现象：pip install执行失败时，报错误’module’ object has no attribute ‘SSL_ST_INIT’：具体错误信息如下：Traceback (most recent call last): File “/usr/local/bin/pip”, line 9, in load_entry_point(‘pip==10.0.1’, ‘console_scripts’, ‘pip’)() File “/usr/lib/python2.7/dist-packages/pkg_resources/init.py”, line 542, in load_entry_point return get_distribution(dist).load_entry_point(group, name) File “/usr/lib/python2.7/dist-packages/pkg_resources/init.py”, line 2569, in load_entry_point return ep.load() File “/usr/lib/python2.7/dist-packages/pkg_resources/init.py”, line 2229, in load return self.resolve() File “/usr/lib/python2.7/dist-packages/pkg_resources/init.py”, line 2235, in resolve module = import(self.module_name, fromlist=[‘name‘], level=0) File “/usr/local/lib/python2.7/dist-packages/pip-10.0.1-py2.7.egg/pip/_internal/init.py”, line 42, in from pip._internal import cmdoptions File “/usr/local/lib/python2.7/dist-packages/pip-10.0.1-py2.7.egg/pip/_internal/cmdoptions.py”, line 16, in from pip._internal.index import ( File “/usr/local/lib/python2.7/dist-packages/pip-10.0.1-py2.7.egg/pip/_internal/index.py”, line 15, in from pip._vendor import html5lib, requests, six File “/usr/local/lib/python2.7/dist-packages/pip-10.0.1-py2.7.egg/pip/_vendor/requests/init.py”, line 86, in from pip._vendor.urllib3.contrib import pyopenssl File “/usr/local/lib/python2.7/dist-packages/pip-10.0.1-py2.7.egg/pip/_vendor/urllib3/contrib/pyopenssl.py”, line 46, in import OpenSSL.SSL File “/usr/lib/python2.7/dist-packages/OpenSSL/init.py”, line 8, in from OpenSSL import rand, crypto, SSL File “/usr/lib/python2.7/dist-packages/OpenSSL/SSL.py”, line 118, in SSL_ST_INIT = _lib.SSL_ST_INITAttributeError: ‘module’ object has no attribute ‘SSL_ST_INIT’ 问题原因：OpenSSL版本太低 解决办法：https://stackoverflow.com/questions/51019860/error-with-pip-after-upgrading-module-object-has-no-attribute-ssl-st-initpython -m easy_install –upgrade pyOpenSSL]]></content>
      <categories>
        <category>pip</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用信息]]></title>
    <url>%2F2018%2F09%2F26%2Finformations%2F</url>
    <content type="text"><![CDATA[进入容器全屏参数: -e LINES=$(tput lines) -e COLUMNS=$(tput cols) ceph修改副本数：ceph osd pool set $pool_name min_size 1ceph osd pool set $pool_name size 1 osd_pool_default_size = 1osd_pool_default_min_size = 1 制作ncloud镜像：docker build ./制作neutron镜像：kolla-build –config-file /home/zongk/kolla/etc/kolla/kolla-build.conf -t source -b ubuntu neutron –registry 10.10.20.96 –push –tag 2.5.8 –namespace zongke启动容器测试：docker run -d –name mistral-api -e KOLLA_CONFIG_STRATEGY=”COPY_ALWAYS” -v /var/lib/kolla/config_files/:/var/lib/kolla/config_files/ 10.10.20.96/dc-test/mistral-api:latest]]></content>
      <categories>
        <category>openstack</category>
      </categories>
      <tags>
        <tag>info</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[openstack网络组件热升级]]></title>
    <url>%2F2018%2F09%2F20%2Fopenstack_neutron_upgrade%2F</url>
    <content type="text"><![CDATA[首先根据neutron v2.5分支打出neutron deb包 备份neutron代码及/etc/neutron中的配置文件（重要） L版生产环境L3路由信息，查出主备信息，目前看：网络节点node1和node3是一组，node2和node4是一组；其中node1上31个router，node2上34个router Node1 node3一组，在node3上对每个router查看是否是active节点，如果是active，则执行：ip netns exec qrouter-xxx ifconfig ha-xxx down，把active切换成backup 查询node3上的router是否都已切换成backup 执行升级步骤：a. 安装deb包b. 创建数据库表: floatingipsqos_policies, qos_floatingip_policy_bindings, floatingipsqos_bandwidth_limit_rulesc. 重启neutron-l3、neutron-dhcp、neutron-openvswitch等agent 测试：创建router，看node3上是否创建成功，将node3上的该新创建的router切换成active，看路由是否能通，并且创建新的fip测试qos功能，如果成功，则切换一个真实用户router试试，没问题切换所有router Node3升级完成后，将node1上的所有router切换成backup，备份neutron代码，升级neutron代码 Node2 node4相同操作执行 备注： 备份代码是为了升级失败后，可以回退代码到原始版本，不会造成代码不一致问题 创建新router测试成功后，应该找一个使用率较低的真实router测试]]></content>
      <categories>
        <category>openstack</category>
        <category>neutron</category>
      </categories>
      <tags>
        <tag>升级</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[openstack libvirt错误汇总]]></title>
    <url>%2F2018%2F09%2F20%2Fopenstack_libvirt_errors%2F</url>
    <content type="text"><![CDATA[问题现象: nova libvirt容器启动失败，报错：libvirt-admin.so.0: cannot open shared object file: Permission denied 解决方案: https://docs.openstack.org/project-deploy-guide/kolla-ansible/pike/quickstart.html 在服务器上执行：$ apparmor_parser -R /etc/apparmor.d/usr.sbin.libvirtd # 禁用libvirt profile 问题现象: 创建虚机的时候，nova compute连接libvirt失败：libvirtError: internal error: process exited while connecting to monitor: Could not access KVM kernel module: Permission denied 快速解决方案: https://ask.openstack.org/en/question/56257/failed-to-intialize-kvm-hypervisor-permission-denied/ 修改/etc/kolla/nova-libvirt/qemu.conf user=root group=root重启libvirt容器 以上是临时解决方案，真正原因是/dev/kvm权限问题引起的服务器上执行： $ getfacl /dev/kvm user::rw- user:ubuntu:rw- group::--- mask::rw- other::-- 其中group没有执行权限，导致一直报permission denied错误真正解决办法： $ setfacl -b /dev/kvm # 清楚acl权限 $ setfacl -m group::rw- /dev/kvm # 给group增加权限 $ 修改/etc/kolla/nova-libvirt/qemu.conf user=nova group=nova # 如果被改成root，则改回nova $ docker restart nova_libvirt # 重启libvirt容器]]></content>
      <categories>
        <category>openstack</category>
        <category>libvirt</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
</search>
